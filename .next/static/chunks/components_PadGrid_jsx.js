"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["components_PadGrid_jsx"],{

/***/ "./components/PadGrid.jsx":
/*!********************************!*\
  !*** ./components/PadGrid.jsx ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ PadGrid; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_store__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/store */ \"./utils/store.js\");\n/* harmony import */ var _utils_audio__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/audio */ \"./utils/audio.js\");\n\nvar _s = $RefreshSig$();\n\n\n\nfunction PadGrid() {\n    _s();\n    const activePad = (0,_utils_store__WEBPACK_IMPORTED_MODULE_2__[\"default\"])((state)=>state.activePad);\n    const sounds = (0,_utils_store__WEBPACK_IMPORTED_MODULE_2__[\"default\"])((state)=>state.sounds);\n    const assignSound = (0,_utils_store__WEBPACK_IMPORTED_MODULE_2__[\"default\"])((state)=>state.assignSound);\n    const setBuffer = (0,_utils_store__WEBPACK_IMPORTED_MODULE_2__[\"default\"])((state)=>state.setBuffer);\n    const getBuffer = (0,_utils_store__WEBPACK_IMPORTED_MODULE_2__[\"default\"])((state)=>state.getBuffer);\n    const loadSoundsFromStorage = (0,_utils_store__WEBPACK_IMPORTED_MODULE_2__[\"default\"])((state)=>state.loadSoundsFromStorage);\n    // Track active states with animations\n    const [padStates, setPadStates] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(Array(16).fill({\n        isActive: false,\n        isDropTarget: false,\n        animationScale: 1\n    }));\n    // Track pad animation frames\n    const animationFrames = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)([]);\n    // Reference to audio context\n    const audioContextRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // Initialize\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        // Load sounds from local storage\n        loadSoundsFromStorage();\n        // Audio context must be created after user interaction\n        const initAudio = ()=>{\n            if (!audioContextRef.current) {\n                audioContextRef.current = (0,_utils_audio__WEBPACK_IMPORTED_MODULE_3__.createAudioContext)();\n                // Pre-load assigned sounds\n                sounds.forEach(async (soundUrl, index)=>{\n                    if (soundUrl && !getBuffer(soundUrl)) {\n                        try {\n                            const buffer = await (0,_utils_audio__WEBPACK_IMPORTED_MODULE_3__.loadSound)(audioContextRef.current, soundUrl);\n                            setBuffer(soundUrl, buffer);\n                        } catch (error) {\n                            console.error(\"Failed to load sound \".concat(index, \":\"), error);\n                        }\n                    }\n                });\n            }\n        };\n        window.addEventListener(\"click\", initAudio);\n        return ()=>{\n            window.removeEventListener(\"click\", initAudio);\n            // Cancel all animations on cleanup\n            animationFrames.current.forEach((frame)=>cancelAnimationFrame(frame));\n        };\n    }, []);\n    // React to active pad changes from MIDI\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (activePad) {\n            const index = activePad.index;\n            const velocity = activePad.velocity;\n            // Cancel any existing animation for this pad\n            if (animationFrames.current[index]) {\n                cancelAnimationFrame(animationFrames.current[index]);\n            }\n            // Trigger animation\n            if (velocity > 0) {\n                // Start pad animation\n                animatePad(index, velocity);\n                // Play associated sound\n                const soundUrl = sounds[index];\n                if (soundUrl && audioContextRef.current) {\n                    playPadSound(soundUrl, velocity);\n                }\n            }\n        }\n    }, [\n        activePad,\n        sounds\n    ]);\n    // Animate a pad hit with velocity-based intensity\n    const animatePad = (index, velocity)=>{\n        const normalizedVelocity = velocity / 127;\n        const startTime = performance.now();\n        const duration = 300 + normalizedVelocity * 200; // 300-500ms based on velocity\n        const minScale = 0.92 - normalizedVelocity * 0.07; // Scale between 0.92-0.85 based on velocity\n        // Create a new animation for this pad\n        const animate = (time)=>{\n            const elapsed = time - startTime;\n            const progress = Math.min(elapsed / duration, 1);\n            // Ease-out function\n            const easeOut = (t)=>1 - Math.pow(1 - t, 3);\n            const easedProgress = easeOut(progress);\n            // Scale starts small, returns to 1\n            const currentScale = progress < 0.5 ? 1 - easedProgress * (1 - minScale) * 2 // First half: scale down\n             : minScale + easedProgress * (1 - minScale) * 2; // Second half: scale up\n            // Update pad state with animation values\n            setPadStates((prev)=>{\n                const newStates = [\n                    ...prev\n                ];\n                newStates[index] = {\n                    ...newStates[index],\n                    isActive: progress < 1,\n                    animationScale: currentScale\n                };\n                return newStates;\n            });\n            // Continue animation until complete\n            if (progress < 1) {\n                animationFrames.current[index] = requestAnimationFrame(animate);\n            } else {\n                animationFrames.current[index] = null;\n            }\n        };\n        // Start animation\n        animationFrames.current[index] = requestAnimationFrame(animate);\n    };\n    // Play sound with appropriate volume\n    const playPadSound = (soundUrl, velocity)=>{\n        // Resume audio context if it's suspended\n        if (audioContextRef.current.state === \"suspended\") {\n            audioContextRef.current.resume();\n        }\n        // Get cached buffer or load new one\n        const buffer = getBuffer(soundUrl);\n        if (buffer) {\n            const volume = velocity / 127; // Convert MIDI velocity to volume\n            (0,_utils_audio__WEBPACK_IMPORTED_MODULE_3__.playSound)(audioContextRef.current, buffer, {\n                volume\n            });\n        } else {\n            // Load and cache the buffer if not already loaded\n            (0,_utils_audio__WEBPACK_IMPORTED_MODULE_3__.loadSound)(audioContextRef.current, soundUrl).then((newBuffer)=>{\n                setBuffer(soundUrl, newBuffer);\n                const volume = velocity / 127;\n                (0,_utils_audio__WEBPACK_IMPORTED_MODULE_3__.playSound)(audioContextRef.current, newBuffer, {\n                    volume\n                });\n            }).catch((error)=>console.error(\"Failed to load sound: \".concat(error)));\n        }\n    };\n    // Handle file drop on a pad\n    const handleDrop = (e, padIndex)=>{\n        e.preventDefault();\n        e.stopPropagation();\n        // Reset drop target state\n        setPadStates((prev)=>{\n            const newStates = [\n                ...prev\n            ];\n            newStates[padIndex] = {\n                ...newStates[padIndex],\n                isDropTarget: false\n            };\n            return newStates;\n        });\n        const files = e.dataTransfer.files;\n        if (files.length > 0) {\n            const file = files[0];\n            // Check if it's an audio file\n            if (file.type.startsWith(\"audio/\")) {\n                const objectUrl = URL.createObjectURL(file);\n                // Assign the sound to the pad\n                assignSound(padIndex, objectUrl);\n                // Animate the pad to give feedback\n                animatePad(padIndex, 100); // Medium velocity animation\n                // Preload the sound\n                if (audioContextRef.current) {\n                    (0,_utils_audio__WEBPACK_IMPORTED_MODULE_3__.loadSound)(audioContextRef.current, objectUrl).then((buffer)=>{\n                        setBuffer(objectUrl, buffer);\n                        // Play a preview of the sound\n                        (0,_utils_audio__WEBPACK_IMPORTED_MODULE_3__.playSound)(audioContextRef.current, buffer, {\n                            volume: 0.7\n                        });\n                    }).catch((error)=>{\n                        console.error(\"Failed to load dropped sound:\", error);\n                    });\n                }\n            }\n        }\n    };\n    // Handle dragover event to provide visual feedback\n    const handleDragOver = (e, padIndex)=>{\n        e.preventDefault();\n        e.stopPropagation();\n        // Show this pad as a drop target\n        setPadStates((prev)=>{\n            const newStates = [\n                ...prev\n            ];\n            newStates[padIndex] = {\n                ...newStates[padIndex],\n                isDropTarget: true\n            };\n            return newStates;\n        });\n    };\n    // Handle drag leave\n    const handleDragLeave = (e, padIndex)=>{\n        e.preventDefault();\n        e.stopPropagation();\n        // Remove drop target styling\n        setPadStates((prev)=>{\n            const newStates = [\n                ...prev\n            ];\n            newStates[padIndex] = {\n                ...newStates[padIndex],\n                isDropTarget: false\n            };\n            return newStates;\n        });\n    };\n    // Trigger a pad programmatically (for testing without MIDI)\n    const handlePadClick = (index)=>{\n        // Create a synthetic \"note on\" event with medium velocity\n        const velocity = 80;\n        // Animate the pad\n        animatePad(index, velocity);\n        // Play the sound if assigned\n        const soundUrl = sounds[index];\n        if (soundUrl && audioContextRef.current) {\n            playPadSound(soundUrl, velocity);\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"aspect-square w-full max-w-xl mx-auto grid grid-cols-4 gap-4 p-6 bg-surface rounded-xl border border-zinc-800 shadow-lg animate-fadeIn\",\n        children: Array.from({\n            length: 16\n        }).map((_, index)=>{\n            const hasSound = !!sounds[index];\n            const padState = padStates[index];\n            // Get the last part of the URL for display\n            const soundLabel = hasSound ? sounds[index].split(\"/\").pop().replace(/\\.(wav|mp3)$/, \"\") : \"Drop sound here\";\n            // Style based on pad state\n            const padClasses = \"\\n          pad flex items-center justify-center\\n          \".concat(padState.isActive ? \"active\" : \"\", \" \\n          \").concat(padState.isDropTarget ? \"border-accent border-opacity-70 border-dashed\" : hasSound ? \"border-accent border-opacity-40\" : \"border-zinc-700\", \"\\n          \").concat(hasSound ? \"bg-zinc-700\" : \"\", \"\\n          cursor-pointer\\n        \");\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: padClasses,\n                style: {\n                    transform: \"scale(\".concat(padState.animationScale, \")\"),\n                    boxShadow: padState.isActive ? \"0 0 16px rgba(59, 130, 246, 0.5)\" : \"rgba(0, 0, 0, 0.1) 0px 4px 12px\"\n                },\n                onClick: ()=>handlePadClick(index),\n                onDrop: (e)=>handleDrop(e, index),\n                onDragOver: (e)=>handleDragOver(e, index),\n                onDragLeave: (e)=>handleDragLeave(e, index),\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"text-center w-full py-3\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"text-sm font-medium mb-2\",\n                            children: index + 1\n                        }, void 0, false, {\n                            fileName: \"/Users/samaydhawan/maschine-web-companion/components/PadGrid.jsx\",\n                            lineNumber: 270,\n                            columnNumber: 15\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"text-xs truncate max-w-full px-3 \".concat(hasSound ? \"text-accent font-medium\" : \"text-gray-400\"),\n                            children: soundLabel\n                        }, void 0, false, {\n                            fileName: \"/Users/samaydhawan/maschine-web-companion/components/PadGrid.jsx\",\n                            lineNumber: 271,\n                            columnNumber: 15\n                        }, this),\n                        !hasSound && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"mt-2 text-[10px] text-gray-500\",\n                            children: \"Drag & drop audio file\"\n                        }, void 0, false, {\n                            fileName: \"/Users/samaydhawan/maschine-web-companion/components/PadGrid.jsx\",\n                            lineNumber: 275,\n                            columnNumber: 17\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/samaydhawan/maschine-web-companion/components/PadGrid.jsx\",\n                    lineNumber: 269,\n                    columnNumber: 13\n                }, this)\n            }, index, false, {\n                fileName: \"/Users/samaydhawan/maschine-web-companion/components/PadGrid.jsx\",\n                lineNumber: 257,\n                columnNumber: 11\n            }, this);\n        })\n    }, void 0, false, {\n        fileName: \"/Users/samaydhawan/maschine-web-companion/components/PadGrid.jsx\",\n        lineNumber: 236,\n        columnNumber: 5\n    }, this);\n}\n_s(PadGrid, \"lyDOmdZHwc79/i2OffDWqe0R8+c=\", false, function() {\n    return [\n        _utils_store__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n        _utils_store__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n        _utils_store__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n        _utils_store__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n        _utils_store__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n        _utils_store__WEBPACK_IMPORTED_MODULE_2__[\"default\"]\n    ];\n});\n_c = PadGrid;\nvar _c;\n$RefreshReg$(_c, \"PadGrid\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/PadGrid.jsx\n"));

/***/ })

}]);